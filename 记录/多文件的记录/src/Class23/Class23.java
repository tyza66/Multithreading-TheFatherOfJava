package Class23;

public class Class23 {
    /*
        如何安全的停止线程
        正常不推荐使用stop方法 因为不安全
        更安全的办法是使用线程终止interrupt或者我们自己做一个标记
        其实他们的思想本质是一样的
        想interrupt这中api其实我们自己也可以封装
        就是线程对象整一个成员 作为判断标准
        在编程中，volatile是一个关键字，用于修饰变量。它的作用是告诉编译器这个变量是易变的，可能会被程序以外的因素修改，因此每次访问这个变量都必须从内存中读取其最新的值，而不是使用之前缓存的值。volatile通常用于多线程或者并发编程中，以确保多个线程之间对变量的读写操作是正确的。
        volatile变量的主要作用包括：
        确保可见性：volatile变量的值会被强制刷新到主内存中，以确保其他线程可以读取到最新的值。在多线程编程中，由于线程之间的可见性问题，如果没有使用volatile关键字，可能会导致线程读取到过期的缓存值，而不是最新的值。
        确保原子性：volatile变量的读取和写入操作是原子性的，也就是说，这些操作不会被线程调度器打断，保证了多线程并发操作时的线程安全性。
        需要注意的是，虽然volatile关键字可以确保变量的可见性和原子性，但是它并不能解决所有的多线程问题。在多线程编程中，还需要考虑锁、同步、原子操作等其他机制来保证线程安全性。
    */
}
